[General]

image-path = "/home/user/Integration/inet/showcases/general/mobility"

**.networkConfiguratorModule = ""

*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 400m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 400m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

[Config Simplistic1]
network = MobilityShowcaseSimplistic1

*.mobility*.speed = 10mps
*.mobility*.subjectModule = "."

*.mobility*.constraintAreaMinX = 0m
*.mobility*.constraintAreaMaxX = 400m
*.mobility*.constraintAreaMinY = 0m
*.mobility*.constraintAreaMaxY = 400m
*.mobility*.constraintAreaMinZ = 0m
*.mobility*.constraintAreaMaxZ = 400m

*.mobility*.displayStringTextFormat = "p: %p\nv: %s\nangle: %P"

[Config Simplistic2]
extends = Simplistic1
network = MobilityShowcaseSimplistic2

*.mobility*.updateDisplayString = false

*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.moduleFilter = "**.mobility*"

[Config StaticPosition]
network = MobilityShowcaseA

*.host*.mobility.typename = "StationaryMobility"

*.visualizer.*.mobilityVisualizer.displayOrientations = false

[Config DeterministicMotion]
network = MobilityShowcaseA

*.host*.mobility.typename = "LinearMobility"

**.mobility.speed = 10mps

[Config StochasticMotion]
network = MobilityShowcaseA

*.host*.mobility.typename = "GaussMarkovMobility"

**.mobility.speed = 10mps

**.mobility.margin = 0m
**.mobility.variance = 0.5
**.mobility.alpha = 0

[Config Group]
network = MobilityShowcaseB

*.numHosts = 7

*.*host*.mobility.typename = "StaticGridMobility"
*.*host*.mobility.numHosts = 7

[Config Orientation]
network = MobilityShowcaseA

*.host7.mobility.typename = "LinearMobility"
*.host7.mobility.speed = 10mps
*.host7.mobility.angle = uniform(0deg, 360deg)

*.host{1..6}.mobility.typename = "FacingMobility"
*.host{1..6}.mobility.targetMobility = "^.^.host7.mobility"

[Config Scriptable]
network = MobilityShowcaseB

*.numHosts = 1

*.host*.mobility.typename = "TurtleMobility"
**.mobility.turtleScript = xmldoc("config.xml")

[Config Attached1]
network = MobilityShowcaseB

*.numHosts = 4

*.host[0].mobility.typename = "LinearMobility"
*.host[0].mobility.speed = 10mps
*.host[0].mobility.initialX = 200m
*.host[0].mobility.initialY = 200m
*.host[0].mobility.initialZ = 0m
*.host[0].mobility.initFromDisplayString = false

*.host[{1..3}].mobility.typename = "AttachedMobility"
*.host[{1..3}].mobility.mobilityModule = "^.^.host[0].mobility"

*.host[1].mobility.offsetX = 50m
*.host[2].mobility.offsetY = 50m
*.host[3].mobility.offsetY = -50m
*.host[3].mobility.offsetHeading = 45deg

[Config Attached2]
network = MobilityShowcaseB

*.numHosts = 5

*.host[0].mobility.typename = "CircleMobility"
*.host[0].mobility.cx = 200m
*.host[0].mobility.cy = 200m
*.host[0].mobility.r = 150m
*.host[0].mobility.speed = 40mps
*.host[0].mobility.startAngle = 90deg

*.host[{1..4}].mobility.typename = "AttachedMobility"
*.host[{1..4}].mobility.mobilityModule = "^.^.host[0].mobility"

*.host[1].mobility.offsetX = 50m
*.host[1].mobility.offsetHeading = 90deg
*.host[2].mobility.offsetX = -50m
*.host[2].mobility.offsetHeading = -90deg
*.host[3].mobility.offsetX = 100m
*.host[3].mobility.offsetY = 100m
*.host[4].mobility.offsetY = 300m
*.host[4].mobility.offsetHeading = -180deg

[Config Superpositioning1]
network = MobilityShowcaseB

*.numHosts = 1

*.host[0].mobility.typename = "SuperpositioningMobility"
*.host[0].mobility.numElements = 2

**.mobility.element[0].typename = "CircleMobility"
**.mobility.element[0].cx = 200m
**.mobility.element[0].cy = 200m
**.mobility.element[0].r = 150m
**.mobility.element[0].speed = 10mps

**.mobility.element[1].typename = "GaussMarkovMobility"
**.mobility.element[1].speed = 10mps
#**.mobility.element[1].angle = uniform(0deg, 360deg)

**.mobility.element[1].margin = 0m
**.mobility.element[1].variance = 0.5
**.mobility.element[1].alpha = 0

**.mobility.element[1].constraintAreaMinX = 0m
**.mobility.element[1].constraintAreaMaxX = 25m
**.mobility.element[1].constraintAreaMinY = 0m
**.mobility.element[1].constraintAreaMaxY = 25m
**.mobility.element[1].constraintAreaMinZ = 0m
**.mobility.element[1].constraintAreaMaxZ = 0m

[Config Superpositioning2]
network = MobilityShowcaseB

*.numHosts = 2

*.host[0].mobility.typename = "TurtleMobility"
*.host[0].mobility.turtleScript = xmldoc("config.xml")

*.host[1].mobility.typename = "SuperpositioningMobility"
*.host[1].mobility.numElements = 2
*.host[1].mobility.element[0].typename = "AttachedMobility"
*.host[1].mobility.element[0].mobilityModule = "^.^.^.host[0].mobility"
*.host[1].mobility.element[1].typename = "CircleMobility"
*.host[1].mobility.element[1].cx = 0m
*.host[1].mobility.element[1].cy = 0m
*.host[1].mobility.element[1].r = 50m
*.host[1].mobility.element[1].constraintAreaMinX = -50m
*.host[1].mobility.element[1].constraintAreaMaxX = 50m
*.host[1].mobility.element[1].constraintAreaMinY = -50m
*.host[1].mobility.element[1].constraintAreaMaxY = 50m
*.host[1].mobility.element[1].speed = -50mps

*.host[1].mobility.element[1].faceForward = true
*.host[1].mobility.element[0].faceForward = false

**.faceForward = true

*.host[1].mobility.faceForward = true

**.displayStringTextFormat = "p: %p\nv: %v\nP: %P"

*.visualizer.*.mobilityVisualizer.displayOrientations = false

[Config InitialVsOvertimePositioning]
network = MobilityShowcaseB
*.numHosts = 8

# last host stays in the center of the playground
**.host[7].mobility.typename = "StationaryMobility"
**.host[7].mobility.initialX = 200m
**.host[7].mobility.initialY = 200m
**.host[7].mobility.initialZ = 0m
#**.host[7].mobility.initFromDisplayString = false

**.initFromDisplayString = false

# other hosts move around the playground using mobility superpositon
**.host[*].mobility.typename = "SuperpositioningMobility"
**.host[*].mobility.numElements = 3

# other hosts are intiallly positioned in static concentric circles
**.host[*].mobility.element[0].typename = "StaticConcentricMobility"
**.host[*].mobility.element[0].subjectModule = "^.^"
**.host[*].mobility.element[0].numHosts = 7
**.host[*].mobility.element[0].distance = 50m

*.host[0].mobility.element[0].initFromDisplayString = false

# other hosts are also moving around in a larger circle following host[0]
**.host[0].mobility.element[1].typename = "CircleMobility"
**.host[0].mobility.element[1].faceForward = false
**.host[0].mobility.element[1].cx = 150m
**.host[0].mobility.element[1].cy = 150m
**.host[0].mobility.element[1].r = 100m
**.host[0].mobility.element[1].speed = 40mps

**.host[*].mobility.element[1].typename = "AttachedMobility" # other hosts follow the movement of the 2nd element of host[0]'s mobility superposition 
**.host[*].mobility.element[1].mobilityModule = "^.^.^.host[0].mobility.element[1]"

# other hosts are facing towards the last host sitting in the center
**.host[*].mobility.element[2].typename = "FacingMobility"
**.host[*].mobility.element[2].initFromDisplayString = false
**.host[*].mobility.element[2].initialX = 0m
**.host[*].mobility.element[2].initialY = 0m
**.host[*].mobility.element[2].initialZ = 0m
**.host[*].mobility.element[2].sourceMobility = "^" # the superposition is the source
**.host[*].mobility.element[2].targetMobility = "^.^.^.host[7].mobility" # last host is the target

[Config AntennaOrientation]
network = MobilityShowcaseC
sim-time-limit = 10000s

# base mobility type
*.base.mobility.typename = "StationaryMobility"

# rover's mobility
*.rover.mobility.typename = "LinearMobility"
*.rover.mobility.speed = 0.05mps
*.rover.mobility.angle = 0deg

# rover canvas image
*.rover.canvasImage = "showcases/marsrover"

# rover wlan settings
*.rover.numWlanInterfaces = 2
*.rover.wlan[*].mgmt.typename = "Ieee80211MgmtAdhoc"
*.rover.wlan[*].agent.typename = ""

# rover antenna mobility settings
*.rover.wlan[*].radio.antenna.mobility.typename = "SuperpositioningMobility"
*.rover.wlan[*].radio.antenna.mobility.numElements = 2

# rover's antenna mobility element[0] (attachedMobility)
*.rover.wlan[*].radio.antenna.mobility.element[0].typename = "AttachedMobility"
*.rover.wlan[*].radio.antenna.mobility.element[0].mobilityModule = "^.^.^.^.^.mobility"
*.rover.wlan[0].radio.antenna.mobility.element[0].offsetX = 45m
*.rover.wlan[0].radio.antenna.mobility.element[0].offsetY = -5m
*.rover.wlan[1].radio.antenna.mobility.element[0].offsetX = -47m
*.rover.wlan[1].radio.antenna.mobility.element[0].offsetY = 9m
*.rover.wlan[1].radio.antenna.mobility.element[0].faceForward = false

# rover's antenna mobility element[1] (facingMobility)
*.rover.wlan[*].radio.antenna.mobility.element[1].typename = "FacingMobility"
*.rover.wlan[*].radio.antenna.mobility.element[1].sourceMobility = "^"
*.rover.wlan[0].radio.antenna.mobility.element[1].targetMobility = "^.^.^.^.^.^.base.mobility"
*.rover.wlan[1].radio.antenna.mobility.element[1].targetMobility = "^.^.^.^.^.^.drone.mobility"
*.rover.wlan[*].radio.antenna.mobility.element[1].initial* = 0m
*.rover.wlan[*].radio.antenna.mobility.element[1].initFromDisplayString = false

# drone's mobility
*.drone.mobility.typename = "CircleMobility"
*.drone.mobility.cx = 400m
*.drone.mobility.cy = 400m
*.drone.mobility.r = 350m
*.drone.mobility.speed = -1mps
*.drone.mobility.startAngle = 180deg
*.drone.mobility.faceForward = true

# constraint area
**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 800m
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 800m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

# visualization
*.visualizer.*.numMobilityVisualizers = 2

*.visualizer.*.mobilityVisualizer[*].displayPositions = true
*.visualizer.*.mobilityVisualizer[*].displayOrientations = true

# settings for the rover and the drone
*.visualizer.*.mobilityVisualizer[0].displayVelocities = true
*.visualizer.*.mobilityVisualizer[0].displayMovementTrails = true
*.visualizer.*.mobilityVisualizer[0].velocityArrowScale = 25
*.visualizer.*.mobilityVisualizer[0].moduleFilter = "*.rover.mobility or *.drone.mobility"

# settings for the antennas
*.visualizer.*.mobilityVisualizer[1].moduleFilter = "**.antenna.mobility"
*.visualizer.*.mobilityVisualizer[1].orientationFillColor = "yellow"

[Config TestAntennaLobeVisualization]
extends = AntennaOrientation

**.displayAntennaLobes = true
**.displayOrientations = false

**.antenna.typename = "ParabolicAntenna"

**.beamWidth = 20deg

**.maxGain = 10dB
**.minGain = 0dB

**.displayRadios = true

**.radioVisualizer*.radioFilter = "**.wlan[1].**"

[Config TestAntennaLobeView]
extends = TestAntennaLobeVisualization

[Config TestAntennaLobeXY]
extends = TestAntennaLobeVisualization

**.antennaLobePlane = "xy"

[Config TestAntennaLobeXZ]
extends = TestAntennaLobeVisualization

**.antennaLobePlane = "xz"