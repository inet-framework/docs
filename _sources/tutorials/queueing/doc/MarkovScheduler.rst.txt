Markov Chain Based Scheduler
============================

V1

The :ned:`MarkovScheduler` module schedules packets using a markov process,
with configurable initial state, transition matrix and wait intervals.

V2

The :ned:`MarkovScheduler` module uses a Markov process to schedule packets.
The current state of the Markov process selects the input gate; a configurable
transition matrix determines the probabilities of state change; the configured
wait intervals determine the time between state changes.

In this example network, packets are generated by two passive packet sources (:ned:`PassivePacketSource`).
The packet sources are connected to a scheduler (:ned:`MarkovScheduler`).
Packets are popped from the scheduler by an active packet sink (:ned:`ActivePacketSink`).
The scheduler in turn pops packets from one of the packet sources, based on the current
state of the Markov process.

.. In this step, packets are at random intervals produced by two active sources
   (:ned:`ActivePacketSource`). One source produces packets with a slower rate while the other
   source uses a faster rate. The two packet sources are combined using a Markov
   chain (:ned:`MarkovScheduler`) with random transition matrix and random wait intervals. The packets are
   consumed by a single passive sink (:ned:`PassivePacketSink`).

.. figure:: media/Burst1.png
   :width: 80%
   :align: center

.. literalinclude:: ../QueueingTutorial.ned
   :start-at: network MarkovSchedulerTutorialStep
   :end-before: //----
   :language: ned

.. literalinclude:: ../omnetpp.ini
   :start-at: Config MarkovScheduler
   :end-at: waitIntervals
   :language: ini
